/*
 * WARNING: this is an autogenerated file and will be overwritten by
 * the extension interface script.
 */

#include "s3eExt.h"
#include "IwDebug.h"
#include "s3eDevice.h"


#include "bmGameAnalytics.h"


// Define S3E_EXT_SKIP_LOADER_CALL_LOCK on the user-side to skip LoaderCallStart/LoaderCallDone()-entry.
// e.g. in s3eNUI this is used for generic user-side IwUI-based implementation.
#ifndef S3E_EXT_SKIP_LOADER_CALL_LOCK
#if defined I3D_ARCH_MIPS || defined S3E_ANDROID_X86 || (defined(WINAPI_FAMILY) && (WINAPI_FAMILY == WINAPI_FAMILY_PHONE_APP)) || defined I3D_ARCH_NACLX86_64
// For platforms missing stack-switching (MIPS, WP8, Android-x86, NaCl, etc.) make loader-entry via LoaderCallStart/LoaderCallDone() on the user-side.
#define LOADER_CALL_LOCK
#endif
#endif

/**
 * Definitions for functions types passed to/from s3eExt interface
 */
typedef const char*(*bmGameAnalyticsGetErrorString_t)();
typedef bmGameAnalyticsError(*bmGameAnalyticsGetError_t)();
typedef       void(*bmGameAnalyticsAddBusinessEventWithoutReceipt_t)(const char * currency, int amount, const char * itemType, const char * itemId, const char * cartType);
typedef       void(*bmGameAnalyticsAddBusinessEvent_t)(const char * currency, int amount, const char * itemType, const char * itemId, const char * cartType, const char * receipt);
typedef       void(*bmGameAnalyticsAddResourceEvent_t)(bmGameAnalyticsResourceFlowType flowType, const char * currency, int amount, const char * itemType, const char * itemId);
typedef       void(*bmGameAnalyticsAddProgressionEventWithScore_t)(bmGameAnalyticsProgressionStatus progressionStatus, const char * progression01, const char * progression02, const char * progression03, int score);
typedef       void(*bmGameAnalyticsAddProgressionEvent_t)(bmGameAnalyticsProgressionStatus progressionStatus, const char * progression01, const char * progression02, const char * progression03);
typedef       void(*bmGameAnalyticsAddDesignEvent_t)(const char * eventId);
typedef       void(*bmGameAnalyticsAddDesignEventWithValue_t)(const char * eventId, float value);
typedef       void(*bmGameAnalyticsAddErrorEvent_t)(bmGameAnalyticsErrorSeverity severity, const char * message);
typedef       void(*bmGameAnalyticsSetCustomDimension01_t)(const char * dimension01);
typedef       void(*bmGameAnalyticsSetCustomDimension02_t)(const char * dimension02);
typedef       void(*bmGameAnalyticsSetCustomDimension03_t)(const char * dimension03);
typedef       void(*bmGameAnalyticsSetUserFacebookId_t)(const char * facebookId);
typedef       void(*bmGameAnalyticsSetUserGender_t)(bool is_male);
typedef       void(*bmGameAnalyticsSetUserBirthYear_t)(int year);

/**
 * struct that gets filled in by bmGameAnalyticsRegister
 */
typedef struct bmGameAnalyticsFuncs
{
    bmGameAnalyticsGetErrorString_t m_bmGameAnalyticsGetErrorString;
    bmGameAnalyticsGetError_t m_bmGameAnalyticsGetError;
    bmGameAnalyticsAddBusinessEventWithoutReceipt_t m_bmGameAnalyticsAddBusinessEventWithoutReceipt;
    bmGameAnalyticsAddBusinessEvent_t m_bmGameAnalyticsAddBusinessEvent;
    bmGameAnalyticsAddResourceEvent_t m_bmGameAnalyticsAddResourceEvent;
    bmGameAnalyticsAddProgressionEventWithScore_t m_bmGameAnalyticsAddProgressionEventWithScore;
    bmGameAnalyticsAddProgressionEvent_t m_bmGameAnalyticsAddProgressionEvent;
    bmGameAnalyticsAddDesignEvent_t m_bmGameAnalyticsAddDesignEvent;
    bmGameAnalyticsAddDesignEventWithValue_t m_bmGameAnalyticsAddDesignEventWithValue;
    bmGameAnalyticsAddErrorEvent_t m_bmGameAnalyticsAddErrorEvent;
    bmGameAnalyticsSetCustomDimension01_t m_bmGameAnalyticsSetCustomDimension01;
    bmGameAnalyticsSetCustomDimension02_t m_bmGameAnalyticsSetCustomDimension02;
    bmGameAnalyticsSetCustomDimension03_t m_bmGameAnalyticsSetCustomDimension03;
    bmGameAnalyticsSetUserFacebookId_t m_bmGameAnalyticsSetUserFacebookId;
    bmGameAnalyticsSetUserGender_t m_bmGameAnalyticsSetUserGender;
    bmGameAnalyticsSetUserBirthYear_t m_bmGameAnalyticsSetUserBirthYear;
} bmGameAnalyticsFuncs;

static bmGameAnalyticsFuncs g_Ext;
static bool g_GotExt = false;
static bool g_TriedExt = false;
static bool g_TriedNoMsgExt = false;

static bool _extLoad()
{
    if (!g_GotExt && !g_TriedExt)
    {
        s3eResult res = s3eExtGetHash(0x7ead316, &g_Ext, sizeof(g_Ext));
        if (res == S3E_RESULT_SUCCESS)
            g_GotExt = true;
        else
            s3eDebugAssertShow(S3E_MESSAGE_CONTINUE_STOP_IGNORE,                 "error loading extension: bmGameAnalytics");

        g_TriedExt = true;
        g_TriedNoMsgExt = true;
    }

    return g_GotExt;
}

static bool _extLoadNoMsg()
{
    if (!g_GotExt && !g_TriedNoMsgExt)
    {
        s3eResult res = s3eExtGetHash(0x7ead316, &g_Ext, sizeof(g_Ext));
        if (res == S3E_RESULT_SUCCESS)
            g_GotExt = true;
        g_TriedNoMsgExt = true;
        if (g_TriedExt)
            g_TriedExt = true;
    }

    return g_GotExt;
}

s3eBool bmGameAnalyticsAvailable()
{
    _extLoadNoMsg();
    return g_GotExt ? S3E_TRUE : S3E_FALSE;
}

const char* bmGameAnalyticsGetErrorString()
{
    IwTrace(BMGAMEANALYTICS_VERBOSE, ("calling bmGameAnalytics[0] func: bmGameAnalyticsGetErrorString"));

    if (!_extLoad())
        return NULL;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_bmGameAnalyticsGetErrorString);
#endif

    const char* ret = g_Ext.m_bmGameAnalyticsGetErrorString();

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_bmGameAnalyticsGetErrorString);
#endif

    return ret;
}

bmGameAnalyticsError bmGameAnalyticsGetError()
{
    IwTrace(BMGAMEANALYTICS_VERBOSE, ("calling bmGameAnalytics[1] func: bmGameAnalyticsGetError"));

    if (!_extLoad())
        return (bmGameAnalyticsError)0;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_bmGameAnalyticsGetError);
#endif

    bmGameAnalyticsError ret = g_Ext.m_bmGameAnalyticsGetError();

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_bmGameAnalyticsGetError);
#endif

    return ret;
}

void bmGameAnalyticsAddBusinessEventWithoutReceipt(const char * currency, int amount, const char * itemType, const char * itemId, const char * cartType)
{
    IwTrace(BMGAMEANALYTICS_VERBOSE, ("calling bmGameAnalytics[2] func: bmGameAnalyticsAddBusinessEventWithoutReceipt"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_bmGameAnalyticsAddBusinessEventWithoutReceipt);
#endif

    g_Ext.m_bmGameAnalyticsAddBusinessEventWithoutReceipt(currency, amount, itemType, itemId, cartType);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_bmGameAnalyticsAddBusinessEventWithoutReceipt);
#endif

    return;
}

void bmGameAnalyticsAddBusinessEvent(const char * currency, int amount, const char * itemType, const char * itemId, const char * cartType, const char * receipt)
{
    IwTrace(BMGAMEANALYTICS_VERBOSE, ("calling bmGameAnalytics[3] func: bmGameAnalyticsAddBusinessEvent"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_bmGameAnalyticsAddBusinessEvent);
#endif

    g_Ext.m_bmGameAnalyticsAddBusinessEvent(currency, amount, itemType, itemId, cartType, receipt);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_bmGameAnalyticsAddBusinessEvent);
#endif

    return;
}

void bmGameAnalyticsAddResourceEvent(bmGameAnalyticsResourceFlowType flowType, const char * currency, int amount, const char * itemType, const char * itemId)
{
    IwTrace(BMGAMEANALYTICS_VERBOSE, ("calling bmGameAnalytics[4] func: bmGameAnalyticsAddResourceEvent"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_bmGameAnalyticsAddResourceEvent);
#endif

    g_Ext.m_bmGameAnalyticsAddResourceEvent(flowType, currency, amount, itemType, itemId);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_bmGameAnalyticsAddResourceEvent);
#endif

    return;
}

void bmGameAnalyticsAddProgressionEventWithScore(bmGameAnalyticsProgressionStatus progressionStatus, const char * progression01, const char * progression02, const char * progression03, int score)
{
    IwTrace(BMGAMEANALYTICS_VERBOSE, ("calling bmGameAnalytics[5] func: bmGameAnalyticsAddProgressionEventWithScore"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_bmGameAnalyticsAddProgressionEventWithScore);
#endif

    g_Ext.m_bmGameAnalyticsAddProgressionEventWithScore(progressionStatus, progression01, progression02, progression03, score);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_bmGameAnalyticsAddProgressionEventWithScore);
#endif

    return;
}

void bmGameAnalyticsAddProgressionEvent(bmGameAnalyticsProgressionStatus progressionStatus, const char * progression01, const char * progression02, const char * progression03)
{
    IwTrace(BMGAMEANALYTICS_VERBOSE, ("calling bmGameAnalytics[6] func: bmGameAnalyticsAddProgressionEvent"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_bmGameAnalyticsAddProgressionEvent);
#endif

    g_Ext.m_bmGameAnalyticsAddProgressionEvent(progressionStatus, progression01, progression02, progression03);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_bmGameAnalyticsAddProgressionEvent);
#endif

    return;
}

void bmGameAnalyticsAddDesignEvent(const char * eventId)
{
    IwTrace(BMGAMEANALYTICS_VERBOSE, ("calling bmGameAnalytics[7] func: bmGameAnalyticsAddDesignEvent"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_bmGameAnalyticsAddDesignEvent);
#endif

    g_Ext.m_bmGameAnalyticsAddDesignEvent(eventId);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_bmGameAnalyticsAddDesignEvent);
#endif

    return;
}

void bmGameAnalyticsAddDesignEventWithValue(const char * eventId, float value)
{
    IwTrace(BMGAMEANALYTICS_VERBOSE, ("calling bmGameAnalytics[8] func: bmGameAnalyticsAddDesignEventWithValue"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_bmGameAnalyticsAddDesignEventWithValue);
#endif

    g_Ext.m_bmGameAnalyticsAddDesignEventWithValue(eventId, value);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_bmGameAnalyticsAddDesignEventWithValue);
#endif

    return;
}

void bmGameAnalyticsAddErrorEvent(bmGameAnalyticsErrorSeverity severity, const char * message)
{
    IwTrace(BMGAMEANALYTICS_VERBOSE, ("calling bmGameAnalytics[9] func: bmGameAnalyticsAddErrorEvent"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_bmGameAnalyticsAddErrorEvent);
#endif

    g_Ext.m_bmGameAnalyticsAddErrorEvent(severity, message);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_bmGameAnalyticsAddErrorEvent);
#endif

    return;
}

void bmGameAnalyticsSetCustomDimension01(const char * dimension01)
{
    IwTrace(BMGAMEANALYTICS_VERBOSE, ("calling bmGameAnalytics[10] func: bmGameAnalyticsSetCustomDimension01"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_bmGameAnalyticsSetCustomDimension01);
#endif

    g_Ext.m_bmGameAnalyticsSetCustomDimension01(dimension01);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_bmGameAnalyticsSetCustomDimension01);
#endif

    return;
}

void bmGameAnalyticsSetCustomDimension02(const char * dimension02)
{
    IwTrace(BMGAMEANALYTICS_VERBOSE, ("calling bmGameAnalytics[11] func: bmGameAnalyticsSetCustomDimension02"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_bmGameAnalyticsSetCustomDimension02);
#endif

    g_Ext.m_bmGameAnalyticsSetCustomDimension02(dimension02);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_bmGameAnalyticsSetCustomDimension02);
#endif

    return;
}

void bmGameAnalyticsSetCustomDimension03(const char * dimension03)
{
    IwTrace(BMGAMEANALYTICS_VERBOSE, ("calling bmGameAnalytics[12] func: bmGameAnalyticsSetCustomDimension03"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_bmGameAnalyticsSetCustomDimension03);
#endif

    g_Ext.m_bmGameAnalyticsSetCustomDimension03(dimension03);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_bmGameAnalyticsSetCustomDimension03);
#endif

    return;
}

void bmGameAnalyticsSetUserFacebookId(const char * facebookId)
{
    IwTrace(BMGAMEANALYTICS_VERBOSE, ("calling bmGameAnalytics[13] func: bmGameAnalyticsSetUserFacebookId"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_bmGameAnalyticsSetUserFacebookId);
#endif

    g_Ext.m_bmGameAnalyticsSetUserFacebookId(facebookId);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_bmGameAnalyticsSetUserFacebookId);
#endif

    return;
}

void bmGameAnalyticsSetUserGender(bool is_male)
{
    IwTrace(BMGAMEANALYTICS_VERBOSE, ("calling bmGameAnalytics[14] func: bmGameAnalyticsSetUserGender"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_bmGameAnalyticsSetUserGender);
#endif

    g_Ext.m_bmGameAnalyticsSetUserGender(is_male);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_bmGameAnalyticsSetUserGender);
#endif

    return;
}

void bmGameAnalyticsSetUserBirthYear(int year)
{
    IwTrace(BMGAMEANALYTICS_VERBOSE, ("calling bmGameAnalytics[15] func: bmGameAnalyticsSetUserBirthYear"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_bmGameAnalyticsSetUserBirthYear);
#endif

    g_Ext.m_bmGameAnalyticsSetUserBirthYear(year);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_bmGameAnalyticsSetUserBirthYear);
#endif

    return;
}
